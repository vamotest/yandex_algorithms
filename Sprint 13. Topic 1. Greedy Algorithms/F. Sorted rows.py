"""
https://contest.yandex.ru/contest/18360/problems/F/

Дан набор строк одинаковой длины, состоящих из маленьких латинских букв.
Нужно определить, какое минимальное число позиций в каждой из строк
нужно удалить, чтобы буквы в строках, соответствующие каждому индексу
из оставшихся, были лексикографически отсортированы
по неубыванию (то есть последовательности, читающиеся сверху вниз,
должны быть отсортированы по неубыванию).

Как происходит удаление – один столбец полностью берет и уничтожается.

Формат ввода
В первой строке записано число n - количество строк.
Во второй - m - длина каждой из строк.

Оба числа не превосходят 1000.

В каждой из следующих n строк записана строка, состоящая из m строчных букв
латинского алфавита.

Формат вывода
Нужно вывести одно число - минимальное количество индексов,
которые нужно удалить, чтобы выполнялось указанное требование.
"""


def main(mas, rows, columns):
    result = 0
    
    if rows <= 1:
        return 0
    
    if columns == 0:
        return 0
    
    for column in range(columns):
        for row in range(1, rows):
            if mas[row][column] < mas[row - 1][column]:
                result += 1
                break
    return result


if __name__ == '__main__':
    
    rows = int(input())
    rows_length = int(input())
    array = [[i for i in input()] for i in range(rows)]
    print(array)
    print(main(array, rows, rows_length))
